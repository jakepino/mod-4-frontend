{"ast":null,"code":"var _jsxFileName = \"/Users/jakepino/Development/Github/mod-4-project/mod-4-frontend/src/components/MyPost.js\";\nimport React, { Component } from \"react\";\nimport UserPost from \"./components/UserPost\";\nexport default class MyPost extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      myPost: [],\n      myComments: [],\n      myPhotos: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:3000/posts\").then(resp => resp.json()).then(posts => {\n      let newData = posts.filter(post => post.user_id === this.props.currentUser);\n      console.log(newData);\n      this.setState({\n        myPost: newData\n      });\n    });\n    fetch(\"http://localhost:3000/photos\").then(resp => resp.json()).then(photos => {\n      this.setState({\n        myPhotos: photos\n      });\n    });\n    fetch(\"http://localhost:3000/comments\").then(resp => resp.json()).then(comments => {\n      this.setState({\n        myComments: comments\n      });\n    });\n  }\n\n  render() {\n    this.state.myPost.map(post => {\n      let photos = this.state.myPhotos.filter(photo => photo.post_id === post.id);\n      let postComments = this.state.myComments.filter(comment => comment.post_id === post.id);\n      return /*#__PURE__*/React.createElement(UserPost, {\n        key: post.id,\n        post: post,\n        pics: photo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 10\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/jakepino/Development/Github/mod-4-project/mod-4-frontend/src/components/MyPost.js"],"names":["React","Component","UserPost","MyPost","state","myPost","myComments","myPhotos","componentDidMount","fetch","then","resp","json","posts","newData","filter","post","user_id","props","currentUser","console","log","setState","photos","comments","render","map","photo","post_id","id","postComments","comment"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,eAAe,MAAMC,MAAN,SAAqBF,SAArB,CAA+B;AAAA;AAAA;AAAA,SAC7CG,KAD6C,GACrC;AACPC,MAAAA,MAAM,EAAE,EADD;AAEPC,MAAAA,UAAU,EAAE,EAFL;AAGPC,MAAAA,QAAQ,EAAE;AAHH,KADqC;AAAA;;AAM7CC,EAAAA,iBAAiB,GAAG;AACnBC,IAAAA,KAAK,CAAC,6BAAD,CAAL,CACEC,IADF,CACQC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADjB,EAEEF,IAFF,CAEQG,KAAD,IAAW;AAChB,UAAIC,OAAO,GAAGD,KAAK,CAACE,MAAN,CACZC,IAAD,IAAUA,IAAI,CAACC,OAAL,KAAiB,KAAKC,KAAL,CAAWC,WADzB,CAAd;AAGAC,MAAAA,OAAO,CAACC,GAAR,CAAYP,OAAZ;AACA,WAAKQ,QAAL,CAAc;AACbjB,QAAAA,MAAM,EAAES;AADK,OAAd;AAGA,KAVF;AAWAL,IAAAA,KAAK,CAAC,8BAAD,CAAL,CACEC,IADF,CACQC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADjB,EAEEF,IAFF,CAEQa,MAAD,IAAY;AACjB,WAAKD,QAAL,CAAc;AACbf,QAAAA,QAAQ,EAAEgB;AADG,OAAd;AAGA,KANF;AAOAd,IAAAA,KAAK,CAAC,gCAAD,CAAL,CACEC,IADF,CACQC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADjB,EAEEF,IAFF,CAEQc,QAAD,IAAc;AACnB,WAAKF,QAAL,CAAc;AACbhB,QAAAA,UAAU,EAAEkB;AADC,OAAd;AAGA,KANF;AAOA;;AACDC,EAAAA,MAAM,GAAG;AACR,SAAKrB,KAAL,CAAWC,MAAX,CAAkBqB,GAAlB,CAAuBV,IAAD,IAAU;AAC/B,UAAIO,MAAM,GAAG,KAAKnB,KAAL,CAAWG,QAAX,CAAoBQ,MAApB,CACXY,KAAD,IAAWA,KAAK,CAACC,OAAN,KAAkBZ,IAAI,CAACa,EADtB,CAAb;AAGA,UAAIC,YAAY,GAAG,KAAK1B,KAAL,CAAWE,UAAX,CAAsBS,MAAtB,CACjBgB,OAAD,IAAaA,OAAO,CAACH,OAAR,KAAoBZ,IAAI,CAACa,EADpB,CAAnB;AAGA,0BAAO,oBAAC,QAAD;AAAU,QAAA,GAAG,EAAEb,IAAI,CAACa,EAApB;AAAwB,QAAA,IAAI,EAAEb,IAA9B;AAAoC,QAAA,IAAI,EAAEW,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACA,KARD;AASA,wBAAO;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACA;;AA5C4C","sourcesContent":["import React, { Component } from \"react\";\nimport UserPost from \"./components/UserPost\";\nexport default class MyPost extends Component {\n\tstate = {\n\t\tmyPost: [],\n\t\tmyComments: [],\n\t\tmyPhotos: [],\n\t};\n\tcomponentDidMount() {\n\t\tfetch(\"http://localhost:3000/posts\")\n\t\t\t.then((resp) => resp.json())\n\t\t\t.then((posts) => {\n\t\t\t\tlet newData = posts.filter(\n\t\t\t\t\t(post) => post.user_id === this.props.currentUser\n\t\t\t\t);\n\t\t\t\tconsole.log(newData);\n\t\t\t\tthis.setState({\n\t\t\t\t\tmyPost: newData,\n\t\t\t\t});\n\t\t\t});\n\t\tfetch(\"http://localhost:3000/photos\")\n\t\t\t.then((resp) => resp.json())\n\t\t\t.then((photos) => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tmyPhotos: photos,\n\t\t\t\t});\n\t\t\t});\n\t\tfetch(\"http://localhost:3000/comments\")\n\t\t\t.then((resp) => resp.json())\n\t\t\t.then((comments) => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tmyComments: comments,\n\t\t\t\t});\n\t\t\t});\n\t}\n\trender() {\n\t\tthis.state.myPost.map((post) => {\n\t\t\tlet photos = this.state.myPhotos.filter(\n\t\t\t\t(photo) => photo.post_id === post.id\n\t\t\t);\n\t\t\tlet postComments = this.state.myComments.filter(\n\t\t\t\t(comment) => comment.post_id === post.id\n\t\t\t);\n\t\t\treturn <UserPost key={post.id} post={post} pics={photo} />;\n\t\t});\n\t\treturn <div className=\"card\"></div>;\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}